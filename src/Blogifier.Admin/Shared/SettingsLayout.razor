@layout MainLayout
@inherits LayoutComponentBase
@inject HttpClient _http
@inject AuthenticationStateProvider _stateProvider
@inject Microsoft.Extensions.Localization.IStringLocalizer<Resource> localizer
<div class="app-tab d-flex">
   <div class="app-tab-nav nav flex-column">
      @if (author != null)
      {
         @if (author.IsAdmin)
         {
            <NavLink href="/admin/settings/" Match="NavLinkMatch.All">@localizer["Basic"]</NavLink>
         }
         <NavLink href="/admin/settings/profile/">@localizer["profile"]</NavLink>
         @if (author.IsAdmin)
         {
            <NavLink href="/admin/settings/comments/">@localizer["comments"]</NavLink>
            <NavLink href="/admin/settings/users/">@localizer["users"]</NavLink>
            <hr>
            <NavLink href="/admin/settings/themes/">@localizer["themes"]</NavLink>
            <NavLink href="/admin/settings/customize/">@localizer["customize"]</NavLink>
            <hr>
            <NavLink href="/admin/settings/scripts/">@localizer["scripts"]</NavLink>
            <NavLink href="/admin/settings/import/">@localizer["import"]</NavLink>
            <NavLink href="/admin/settings/advanced/">@localizer["advanced"]</NavLink>
            <hr>
         }
         <NavLink href="/admin/settings/about/">@localizer["about"]</NavLink>
      }
   </div>
   <div class="app-tab-body">
      @Body
   </div>
</div>

@code {
   private Author author;

   protected override async Task OnInitializedAsync()
   {
      var state = await _stateProvider.GetAuthenticationStateAsync();
      var identity = state.User.Identity;
      author = await _http.GetFromJsonAsync<Author>($"api/author/email/{identity.Name}");
   }
}